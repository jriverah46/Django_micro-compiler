
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocLTLEGTGEEQNEleftPLUSMINUSleftTIMESDIVIDEAND ASSIGN CAPTURE COMMA DIVIDE END ENDIF EQ GE GT ID IF LE LPAREN LT MINUS NE NOT NUMBER OR PLUS RPAREN STRING THEN TIMES WRITEprogram : instructionsinstructions : instruction instructions\n                    | instructioninstruction : WRITE LPAREN write_args RPAREN ENDwrite_args : expression\n                  | STRING\n                  | STRING COMMA expression\n                  | expression COMMA expressioninstruction : CAPTURE LPAREN ID RPAREN ENDinstruction : IF LPAREN condition RPAREN THEN instructions ENDIFcondition : expression relop expression\n                 | condition AND condition\n                 | condition OR condition\n                 | NOT conditionrelop : LT\n             | LE\n             | GT\n             | GE\n             | EQ\n             | NEexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | ID\n              | LPAREN expression RPARENinstruction : ID ASSIGN expression END'
    
_lr_action_items = {'WRITE':([0,3,35,48,55,56,61,],[4,4,-30,-4,-9,4,-10,]),'CAPTURE':([0,3,35,48,55,56,61,],[5,5,-30,-4,-9,5,-10,]),'IF':([0,3,35,48,55,56,61,],[7,7,-30,-4,-9,7,-10,]),'ID':([0,3,9,10,11,12,13,25,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,48,55,56,61,],[6,6,20,21,20,20,20,20,20,20,20,20,20,20,-30,20,20,20,-15,-16,-17,-18,-19,-20,-4,-9,6,-10,]),'$end':([1,2,3,8,35,48,55,61,],[0,-1,-3,-2,-30,-4,-9,-10,]),'ENDIF':([3,8,35,48,55,60,61,],[-3,-2,-30,-4,-9,61,-10,]),'LPAREN':([4,5,7,9,11,12,13,25,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,],[9,10,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,-16,-17,-18,-19,-20,]),'ASSIGN':([6,],[11,]),'STRING':([9,],[16,]),'NUMBER':([9,11,12,13,25,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,-16,-17,-18,-19,-20,]),'NOT':([12,25,37,38,],[25,25,25,25,]),'RPAREN':([14,15,16,17,18,19,20,21,23,26,46,47,49,50,51,52,53,54,57,58,59,],[27,-5,-6,-23,-26,-27,-28,34,36,47,-14,-29,-8,-21,-22,-7,-24,-25,-12,-13,-11,]),'COMMA':([15,16,17,18,19,20,47,50,51,53,54,],[28,31,-23,-26,-27,-28,-29,-21,-22,-24,-25,]),'PLUS':([15,17,18,19,20,22,24,26,47,49,50,51,52,53,54,59,],[29,-23,-26,-27,-28,29,29,29,-29,29,-21,-22,29,-24,-25,29,]),'MINUS':([15,17,18,19,20,22,24,26,47,49,50,51,52,53,54,59,],[30,-23,-26,-27,-28,30,30,30,-29,30,-21,-22,30,-24,-25,30,]),'END':([17,18,19,20,22,27,34,47,50,51,53,54,],[-23,-26,-27,-28,35,48,55,-29,-21,-22,-24,-25,]),'LT':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,40,-29,-21,-22,-24,-25,]),'LE':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,41,-29,-21,-22,-24,-25,]),'GT':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,42,-29,-21,-22,-24,-25,]),'GE':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,43,-29,-21,-22,-24,-25,]),'EQ':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,44,-29,-21,-22,-24,-25,]),'NE':([17,18,19,20,24,47,50,51,53,54,],[-23,-26,-27,-28,45,-29,-21,-22,-24,-25,]),'AND':([17,18,19,20,23,46,47,50,51,53,54,57,58,59,],[-23,-26,-27,-28,37,-14,-29,-21,-22,-24,-25,-12,37,-11,]),'OR':([17,18,19,20,23,46,47,50,51,53,54,57,58,59,],[-23,-26,-27,-28,38,-14,-29,-21,-22,-24,-25,-12,-13,-11,]),'TIMES':([17,18,19,20,47,50,51,53,54,],[32,-26,-27,-28,-29,32,32,-24,-25,]),'DIVIDE':([17,18,19,20,47,50,51,53,54,],[33,-26,-27,-28,-29,33,33,-24,-25,]),'THEN':([36,],[56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([0,3,56,],[2,8,60,]),'instruction':([0,3,56,],[3,3,3,]),'write_args':([9,],[14,]),'expression':([9,11,12,13,25,28,31,37,38,39,],[15,22,24,26,24,49,52,24,24,59,]),'term':([9,11,12,13,25,28,29,30,31,37,38,39,],[17,17,17,17,17,17,50,51,17,17,17,17,]),'factor':([9,11,12,13,25,28,29,30,31,32,33,37,38,39,],[18,18,18,18,18,18,18,18,18,53,54,18,18,18,]),'condition':([12,25,37,38,],[23,46,57,58,]),'relop':([24,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions','program',1,'p_program','parser.py',15),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','parser.py',19),
  ('instructions -> instruction','instructions',1,'p_instructions','parser.py',20),
  ('instruction -> WRITE LPAREN write_args RPAREN END','instruction',5,'p_instruction_write','parser.py',23),
  ('write_args -> expression','write_args',1,'p_write_args','parser.py',27),
  ('write_args -> STRING','write_args',1,'p_write_args','parser.py',28),
  ('write_args -> STRING COMMA expression','write_args',3,'p_write_args','parser.py',29),
  ('write_args -> expression COMMA expression','write_args',3,'p_write_args','parser.py',30),
  ('instruction -> CAPTURE LPAREN ID RPAREN END','instruction',5,'p_instruction_capture','parser.py',33),
  ('instruction -> IF LPAREN condition RPAREN THEN instructions ENDIF','instruction',7,'p_instruction_if','parser.py',37),
  ('condition -> expression relop expression','condition',3,'p_condition','parser.py',41),
  ('condition -> condition AND condition','condition',3,'p_condition','parser.py',42),
  ('condition -> condition OR condition','condition',3,'p_condition','parser.py',43),
  ('condition -> NOT condition','condition',2,'p_condition','parser.py',44),
  ('relop -> LT','relop',1,'p_relop','parser.py',47),
  ('relop -> LE','relop',1,'p_relop','parser.py',48),
  ('relop -> GT','relop',1,'p_relop','parser.py',49),
  ('relop -> GE','relop',1,'p_relop','parser.py',50),
  ('relop -> EQ','relop',1,'p_relop','parser.py',51),
  ('relop -> NE','relop',1,'p_relop','parser.py',52),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',55),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',56),
  ('expression -> term','expression',1,'p_expression','parser.py',57),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',60),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',61),
  ('term -> factor','term',1,'p_term','parser.py',62),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',65),
  ('factor -> ID','factor',1,'p_factor','parser.py',66),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',67),
  ('instruction -> ID ASSIGN expression END','instruction',4,'p_instruction_assign','parser.py',70),
]
